/*
    1.热门游戏
    2.最新中奖游戏
*/
//loading对象
var loadingObj = loadingPage({
    type: "load2",
    imgRootPath: imgRootPath,
    divClass: ".ntb-gamelist"
});
//热门游戏
var gameHotObj = {};
function GetHotGameList(GType, Gimage, hotContainerObj) {
    var html5, localData = store.get("game" + GType), updateGame = true;
    loadingObj.Show();
    var hotHtml = '<li class="fl"><a href="javascript:void(0)"><div class="gamelist-div"><div class="gamelist-pic"><img src=" ' + imgRootPath + 'image/{2}/{0}.png " gamecode="{0}" data-html5="{4}" onclick="hot_playGame($(this));" rel="{3}"></div></div><h2 gamecode="{0}" onclick="hot_playGame($(this));" rel="{3}" class="gamelist-bt">{1}</h2></a></li>';


    if (!localData) {
        _GetHotGameList(GType, Gimage, hotContainerObj);
    } else {
        //如果存在本地数据，查询是否需要更新
        localData = JSON.parse(localData);
        $.invoke_api({ ChkGameListUpdate: { GameType: GType, LastDate: localData.LastDate } }, {
            async: true,
            success: function (data, textStatus, jqXHR) {
                if (data.Status == 1) {
                    if (data.row == 1)
                        updateGame = true;
                    else if (data.row == 0)
                        updateGame = false;
                    if (updateGame) {
                        _GetHotGameList(GType, Gimage, hotContainerObj);
                    } else {
                        var sortData = _.chain(localData.GameList).where({ Hot: 1 }).sortBy(function (item) {
                            return -item.Sort;
                        }).value();
                        $(".load2_ref").remove();
                        // loadingObj.Hide(data, 10,function(){
                            
                        // });
                        var tempHotHtml = _renderHtml(sortData);
                        $(hotContainerObj).append(tempHotHtml);
                        gameHotObj[Gtype] = tempHotHtml;
                        $('#hotGame_index').data('eg-hot-save', gameHotObj);

                        console.log("finish")
                        loadingObj.Hide(data, 200, function () {
                            $(".load2_ref").remove();
                        });
                    }

                } else {
                    loadingObj.Hide(data, 0);
                    $(hotContainerObj).html(getMsg(data.Status));
                }
            }
        });
    }

    function _renderHtml(data) {
        var _renderHtml = [];
        $.each(data, function (i, o) {
            if (!!o.Html5 && o.Html5 == 1) html5 = true; else html5 = false;
            if (i < 12) {
                _renderHtml.push(hotHtml.format(o.Code, o.CNName, Gimage, GType, html5));
            }
        });
        return _renderHtml.join("");
    }

    function _GetHotGameList(GType, Gimage, hotContainerObj) {
        $.invoke_api({ GetGameList: { GameType: GType } }, {
            success: function (data, textStatus, jqXHR) {
                switch (data.Status) {
                    case 1:
                        data.row.GameList = _.map(data.row.GameList, function (item) {
                            if (!item.Sort) item.Sort = 0;
                            if (item.Locked == 0)
                                return item;
                        })
                        store.set('game' + GType, JSON.stringify(data.row));
                        var sortData = _.chain(data.row.GameList).where({ Hot: 1, Locked: 0 }).sortBy(function (item) {
                            return -item.Sort;
                        }).value();

                        var tempHotHtml = _renderHtml(sortData);

                        gameHotObj[GType] = tempHotHtml;

                        $('#hotGame_index').data('eg-hot-save', gameHotObj);

                        loadingObj.Hide(data, 200, function () {

                            $(hotContainerObj).append(tempHotHtml);
                            $(".load2_ref").remove();
                        });

                        break;
                    default:
                        loadingObj.Hide(data, 0);
                        $(hotContainerObj).html(getMsg(data.Status));
                        break;
                }
            },
            complete: function (data, jqXHR, textStatus) { }
        });
    }
}


//进入游戏
function hot_playGame($this) {
    var gameCode = $this ? $this.attr("gamecode") : arguments[1];
    var Gtype = $this ? $this.attr('rel') : arguments[2];
    var url;
    var html5 = $this ? $this.attr("data-html5") : arguments[3];
    var hosturl = encodeURIComponent(window.location.origin);

    if (!gameState(Gtype)) return true;

    if (Gtype == '9') {
        openPlatformGame(9, 4);
        return;
    }

    var handle = openGame1();

    if (Gtype == '15') {
        // pt
        $.invoke_api({ GetPTEntry: { GameCode: gameCode, IsHtml5: html5 } }, {
            async: false,
            success: function (data, textStatus, jqXHR) {
                switch (data.Status) {
                    case 16:
                        handle.close();
                        loginConponent.Show();
                        break;
                    case 1:
                        $.when(loadPtScript()).done(function () {
                            var runInterval = setInterval(function () {
                                if (!!iapiVersion && !ptiniapiVersion && !!iapiConf && iapiConf.casinoname == 'powerplay88') {
                                    ptrun();

                                    clearInterval(runInterval);
                                    runInterval = null;

                                    setTimeout(function () {
                                        handle.location.href = data.row;
                                    }, 1000 * 1);
                                }
                            }, 200);
                        });
                        break;
                    default:
                        playgameFail();
                        break;
                }
            }
        });
    }
    else if (Gtype == '12') {
        // ag 
            $.invoke_api({ GetAGXINEntry: { trial: false, IsTrial: false, Type: "", GameCode: gameCode, IsHtml5: html5, ClientDomain: hosturl } }, {
            async: false,
            success: function (data, textStatus, jqXHR) {
                switch (data.Status) {
                    case 16:
                        handle.close();
                        loginConponent.Show();
                        break;
                    case 1:
                        handle.location.href = data.row;
                        break;
                    default:
                        playgameFail();
                        break;
                }
            }
        });
    }
    else if (Gtype == '18') {
        // ttg 
        $.invoke_api({ GetTTGEntry: { GameCode: gameCode, IsHtml5: html5 } }, {
            async: false,
            success: function (data, textStatus, jqXHR) {
                switch (data.Status) {
                    case 16:
                        handle.close();
                        loginConponent.Show();
                        break;
                    case 1:
                        handle.location.href = data.row;
                        break;
                    default:
                        playgameFail();
                        break;
                }
            }
        });
    }
    else if (Gtype == '17' || Gtype == '16') {
        var mginId = '17';
        var command = Gtype == mginId ? { GetMGINEntry: { GameCode: gameCode, IsHtml5: html5 } } : { GetMGEntry: { GameCode: gameCode, IsHtml5: html5 } };

        $.invoke_api(command, {
            async: false,
            success: function (data, textStatus, jqXHR) {
                switch (data.Status) {
                    case 16:
                        handle.close();
                        loginConponent.Show();
                        break;
                    case 1:
                        if (html5 == "false") {
                            var action = data.row.EntryGameUrl;
                            var gameId = data.row.GameID;
                            var theme = data.row.Theme;
                            var uL = data.row.UL;
                            var sExt1 = data.row.sEXT1;
                            var sExt2 = data.row.sEXT2;

                            var formHtml = '<form action="' + action + '" method="post" target="_self">'
                                + '<input type="hidden" name="gameid"         value="' + gameId + '" />'
                                + '<input type="hidden" name="sEXT1"          value="' + sExt1 + '"  />'
                                + '<input type="hidden" name="sEXT2"          value="' + sExt2 + '"  />'
                                + '<input type="hidden" name="UL"             value="' + uL + '" />'
                                + '<input type="hidden" name="applicationid"  value="1023"             />'
                                + '<input type="hidden" name="usertype"       value="0"      />';

                            if (Gtype == mginId) {
                                // mgin
                                formHtml += '<input type="hidden" name="csid"           value="2635"            />'
                                    + '<input type="hidden" name="serverid"       value="2635"            />'
                                    + '<input type="hidden" name="theme"          value="igamingA"        />'
                                    + '</form>';
                            }
                            else {
                                // mg
                                formHtml += '<input type="hidden" name="csid"           value="16113"            />'
                                    + '<input type="hidden" name="serverid"       value="16113"            />'
                                    + '<input type="hidden" name="theme"          value="iGamingA4"        />'
                                    + '<input type="hidden" name="variant"        value="instantplay"      />'
                                    + '</form>';
                            }

                            //openGameByForm(false, formHtml); 
                            handle.document.open();
                            handle.document.write(formHtml);
                            handle.document.close();
                            handle.document.forms[0].submit();
                        } else {
                            handle.location.href = data.row;
                        }
                        break;
                    default:
                        //console.log(data);
                        playgameFail();
                        break;
                }
            }
        });
    }
    else if (Gtype == 19) {
        // bsg 
        $.invoke_api({ GetBSGEntry: { GameCode: gameCode, IsHtml5: html5 } }, {
            async: false,
            success: function (data, textStatus, jqXHR) {
                //console.log(data);
                switch (data.Status) {
                    case 16:
                        handle.close();
                        loginConponent.Show();
                        break;
                    case 1:
                        handle.location.href = data.row;
                        break;
                    default:
                        //console.log(data);
                        playgameFail();
                        break;
                }
            }
        });
    }
    else if (Gtype == 21) {
        $.invoke_api({ GetDTEntry: { GameCode: gameCode, IsHtml5: html5 } }, {
            async: false,
            success: function (data, textStatus, jqXHR) {
                //console.log(data);
                switch (data.Status) {
                    case 16:
                        handle.close();
                        loginConponent.Show();
                        break;
                    case 1:
                        handle.location.href = data.row;
                        break;
                    default:
                        //console.log(data);
                        playgameFail();
                        break;
                }
            }
        });
    } else if (Gtype == 22) {
        // DT厅 
        $.invoke_api({ GetPT_SkyWindEntry: { GameCode: gameCode, IsHtml5: html5 } }, {
            async: false,
            success: function (data, textStatus, jqXHR) {
                //console.log(data);
                switch (data.Status) {
                    case 16:
                        handle.close();
                        loginConponent.Show();
                        break;
                    case 1:
                        handle.location.href = data.row;
                        break;
                    default:
                        //console.log(data);
                        playgameFail();
                        break;
                }
            }
        });
    } else if (Gtype == 23) {
        // PP厅 
        $.invoke_api({ GetPPEntry: { GameCode: gameCode, IsHtml5: html5 } }, {
            async: false,
            success: function (data, textStatus, jqXHR) {
                //console.log(data);
                switch (data.Status) {
                    case 16:
                        handle.close();
                        loginConponent.Show();
                        break;
                    case 1:
                        var url = data.row.replace('[closeUrl]', hosturl);
                        handle.location.href = url;
                        break;
                    default:
                        //console.log(data);
                        playgameFail();
                        break;
                }
            },
            error: function () {
                playgameFail();
            }
        });
    } else if (Gtype == 24) {
        // PS厅 
        $.invoke_api({ GetPSEntry: { GameCode: gameCode, IsHtml5: html5 } }, {
            async: false,
            success: function (data, textStatus, jqXHR) {
                //console.log(data);
                switch (data.Status) {
                    case 16:
                        handle.close();
                        loginConponent.Show();
                        break;
                    case 1:
                        var url = data.row.replace('[lobbyURL]', hosturl + "/egame.aspx#24");
                        handle.location.href = url;
                        break;
                    default:
                        //console.log(data);
                        playgameFail();
                        break;
                }
            },
            error: function () {
                playgameFail();
            }
        });
    } else if (Gtype == '26') {
        // pt国际
        $.invoke_api({ GetPT_INEntry: { GameCode: gameCode, IsHtml5: html5 } }, {
            async: false,
            success: function (data, textStatus, jqXHR) {
                switch (data.Status) {
                    case 16:
                        handle.close();
                        loginConponent.Show();
                        break;
                    case 1:
                        $.when(loadPtScript()).done(function () {
                            var runInterval = setInterval(function () {
                                if (!!iapiVersion && !ptiniapiVersion && !!iapiConf && iapiConf.casinoname == 'greatfortune88') {
                                    ptrun();

                                    clearInterval(runInterval);
                                    runInterval = null;

                                    setTimeout(function () {
                                        handle.location.href = data.row;
                                    }, 1000 * 1);
                                }
                            }, 200);
                        });
                        break;
                    default:
                        playgameFail();
                        break;
                }
            }
        });
    }
    //内函数，进入游戏失败
    function playgameFail() {
        handle.close();
        $('body').Dialog({
            type: "Ask",
            title: "温馨提示",
            messageTitle: "进入游戏失败，请稍后再试。",
            //message: getMsg(data.Status),
            buttons: [{
                name: "确定",
                callback: function () {
                    $(".pro-box").remove();
                    $(".pro-big-box").remove();
                    $(".popup-overlay").remove();
                }
            }],
            closeHandler: function () {
                $(".pro-box").remove();
                $(".popup-overlay").remove();
            }
        });
    }

}

//最新中奖
function WinRecord() {
    var winRecordHtml = {
        t1: '<li class="d_n_w pointer" gamecode="{0}" gamename="{1}" data-html5="{7}" onclick="hot_playGame($(this));" rel="{3}"><div class="fl ntb-egzj-game">' +
        '<div class="gamelist-div"><div class="gamelist-pic"><a href="javascript:void(0)"><img src="' + imgRootPath + 'image/{2}/{0}.png")%>"></a></div></div>' +
        '<h2 class="gamelist-bt ov-h" gamecode="{0}" rel="{3}">{1}</h2></div>' +
        '<div class="fl ntb-egzj-name"><p>{4}</p><h2><span>奖金&nbsp;</span><spna>￥</span>{5}</h2></div>' +
        '<div class="fr ntb-egzj-time">{6}</div></li>',
        GImage: "",
        Gurl: "",
        Gtype: ""
    }

    $.invoke_api({ WinRecord: {} }, {
        success: function (data, textStatus, jqXHR) {
            if (data.Status == 16) { loginConponent.Show(); }
            switch (data.Status) {
                case 1:
                    $.each(data.row, function (i, o) {
                        switch (o.GamePlatform) {
                            case 9:
                                winRecordHtml.GImage = "bbing";
                                break;
                            case 12:
                                winRecordHtml.GImage = "agg";
                                break;
                            case 15:
                                winRecordHtml.GImage = "ptg";
                                break;
                            case 16:
                                winRecordHtml.GImage = "mgg";
                                break;
                            case 17:
                                winRecordHtml.GImage = "mgg";
                                break;
                            case 18:
                                winRecordHtml.GImage = "ttgg";
                                break;
                            case 19:
                                winRecordHtml.GImage = "bsgg";
                                break;
                        }

                        var monthDay = moment(o.WinDateTime).format('MM-DD');

                        var html5 = (data.Html5 == 1);
                        $('.winRecord').append(winRecordHtml.t1.format(o.GameCode, o.GameName, winRecordHtml.GImage, o.GamePlatform, o.MemberACNT, o.Amount, monthDay, html5));
                        if (i < 6) {
                            $('.winRecord li:eq(0)').addClass('on');
                            $('.winRecord li:eq(' + i + ')').removeClass('d_n_w');
                        }
                    });
                    break;
                default: $('.winRecord').html(getMsg(data.Status)); break;
            }
        },
        complete: function (jqXHR, textStatus) { }
    });
}

//热门游戏,最新中奖初始化
$.fn.homePageHandle = function () {
    var _this = $(this);
    _this.click(function () {
        _this.each(function () {
            if ($(this).hasClass("on")) {
                $(this).removeClass("on");
            }
        });
        $(this).addClass("on");

        var urlRel = $(this).attr('rel');
        //$('.game-more').attr('href', '<%=ResolveClientUrl("~/egame.aspx#")%>' + urlRel);
        var hotContainerObj = ".gameHot" + urlRel;
        $("div.gamelist-ul ul").hide().html("");
        //$('.gameHot12, .gameHot15, .gameHot16, .gameHot17, .gameHot18, .gameHot19, .gameHot21').hide().html("");
        $(hotContainerObj).show();
        
        if (!$('#hotGame_index').data('eg-hot-save')) {
            GetHotGameList($(this).attr('rel'), $(this).attr('data-img'), hotContainerObj);
        } else {
            if (!$('#hotGame_index').data('eg-hot-save')[$(this).attr('rel')]) {
                GetHotGameList($(this).attr('rel'), $(this).attr('data-img'), hotContainerObj);
            } else {
                $(hotContainerObj).html($('#hotGame_index').data('eg-hot-save')[$(this).attr('rel')]);
            }
        }
    });

    var isScroll = true;
    $(window).scroll(function () {
        var top = $(window).scrollTop();
        if (top > 60 && isScroll) {
            $('.eg-hot-nav a:eq(0)').click();
            //获取最新中奖游戏
            //WinRecord();
            isScroll = false;
        }

        $("#Live800_chatTip_iframe").hide();
    });

    //中奖游戏动画
    var winSetInterval = setInterval(function () {
        $('.winRecord').find('li').removeClass("on");

        $('.winRecord').find('li.d_n_w:first').removeClass("d_n_w").addClass("hotFadeIn-animate");
        $('.winRecord').find('li').addClass("hotTop-animate");
        var objLi = $('.winRecord').find('li:not(.d_n_w):first');
        $('.winRecord').find('li:nth-child(1)').addClass("hotFadeOut-animate");


        setTimeout(function () {

            $(".hotFadeIn-animate").removeClass("hotFadeIn-animate");
            $(".hotFadeOut-animate").removeClass("hotFadeOut-animate");
            $(".hotTopSecond-animate").removeClass("hotTopSecond-animate");
            $('.hotTop-animate').removeClass("hotTop-animate");
            $('.winRecord').append(objLi.addClass("d_n_w"));
            objLi.remove(10);
        }, 800);

        setTimeout(function () { $('.winRecord').find('li:nth-child(2)').addClass("on"); }, 500);

    }, 6000);
};