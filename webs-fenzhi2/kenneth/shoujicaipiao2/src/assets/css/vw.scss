

// $color:#ec0909;

:root {
    --var1:#ec0909;
    // --default: #ec0909;
    // --blue: #000000;
    // --indigo: #6610f2;
    // --purple: #6f42c1;
    // --pink: #e83e8c;
    // --red: #dc3545;
}

// @function color($color-name) {
//     @return var(--color-#{$color-name});
// }
$color:#ec0909;

$colorList:(
    (class:'ec0909',color:#ec0909 , rgba:rgb(236, 9, 9) , rgba1:rgba(236, 9, 9,0.8) ),
    (class:'df4f1a',color:#df4f1a , rgba:rgb(223, 79, 26) , rgba1:rgba(223, 79, 26,0.8) ),
    (class:'14bd58',color:#14bd58 , rgba:rgb(20, 189, 88) , rgba1:rgba(20, 189, 88,0.8) ),  
    (class:'4169E1',color:#4169E1 , rgba:rgb(65, 105, 225) , rgba1:rgba(65, 105, 225,0.8) ),  
    (class:'d09700',color:#d09700 , rgba:rgb(208, 151, 0) , rgba1:rgba(208, 151, 0,0.8) ),
    (class:'8A2BE2',color:#8A2BE2 , rgba:rgb(138, 43, 226) , rgab1:rgba(138, 43, 226,0.8) ),  
    (class:'FF4500',color:#FF4500 , rgba:rgb(255, 69, 0) , rgba1:rgba(255, 69, 0,0.8) ),
    (class:'ec0000',color:#ec0000 , rgba:rgb(236, 0, 0) , rabg1:rgba(236, 0, 0,0.8) ),
    (class:'213862',color:#213862 , rgba:rgb(33, 56, 98) , rgba1:rgba(33, 56, 98,0.8) ),
    (class:'333333',color:#333333 , rgba:rgb(51, 51, 51) , rgba1:rgba(51, 51, 51,0.8) )
);
// @include bgcolor;
@mixin bgcolor {
    background: #ec0909;
    @for $i from 1 through length($colorList) {
        $item:  nth($colorList, $i );
        .C_#{map-get($item, class)} & {
            background-color: map-get($map: $item, $key:color )
        }
    }
}

@mixin  jianbian {
    background: linear-gradient(0deg , #ec0909 , rgba(#ec0909 , 0.8));
    // background: linear-gradient(0deg , #ec0909 , #ec0909*1.5);
    @for $i from 1 through length($colorList) {
        $item:  nth($colorList, $i );
        .C_#{map-get($item, class)} & {
            background: linear-gradient(0deg ,  map-get($map: $item, $key:color ) , rgba( map-get($map: $item, $key:color ) , 0.8));
            // background: linear-gradient(0deg ,  map-get($map: $item, $key:color ) ,  map-get($map: $item, $key:color )*1.5);
        }
    }
}

// a{
    // background: linear-gradient(red,blue)
// }




// @include textcolor;
@mixin textcolor {
    color: #ec0909;
    @for $i from 1 through length($colorList) {
        $item:  nth($colorList, $i );
        .C_#{map-get($item, class)} & {
            color: map-get($map: $item, $key:color )
        }
    }
}

// @include border-full;
@mixin border-full($width , $type:'') {
    @for $i from 1 through length($colorList) {
        $item:  nth($colorList, $i );
        .C_#{map-get($item, class)} & {
            @if($type==''){
                border:$width solid map-get($map: $item, $key:color )
            }@else{
                border-#{$type}:$width solid map-get($map: $item, $key:color );
            }
        }
    }
}
@mixin boxshow-full($width ,$width1 , $type:'') {
    @for $i from 1 through length($colorList) {
        $item:  nth($colorList, $i );
        .C_#{map-get($item, class)} & {
            box-shadow: 0px 0px $width $width1 map-get($map: $item, $key:color )
            // @if($type==''){
            //     box-shadow: 0px 0px 1px 1px map-get($map: $item, $key:color )
            //     // border:$width solid map-get($map: $item, $key:color )
            // }@else{
            //     box-shadow: 0px 0px 1px 1px map-get($map: $item, $key:color )
            //     // border-#{$type}:$width solid map-get($map: $item, $key:color );
            // }
        }
    }
}

// $color:var(--var1);
// document.body.style.setProperty('--var1','#ffffff');

$vm_base: 375; 

@function  _vw($px) {
    @return ($px / $vm_base) * 100vw ;
}

// rem 单位换算：定为 50px 
// $vm_fontsize: 50; // iPhone 6尺寸的根元素大小基准值
// @function rem($px) {
//     @return ($px / $vm_fontsize ) * 1rem;
// }
// // 根元素大小使用 vw 单位
// $vm_design: 750;
// html {
//     font-size: ($vm_fontsize / ($vm_design / 2)) * 100vw; 
//     // 同时，通过Media Queries 限制根元素最大最小值
//     @media screen and (max-width: 320px) {
//         font-size: 64px;
//     }
//     @media screen and (min-width: 540px) {
//         font-size: 108px;
//     }
// }
// // body 也增加最大最小宽度限制，避免默认100%宽度的 block 元素跟随 body 而过大过小
// body {
//     max-width: 540px;
//     min-width: 320px;
// }


// 使用rem
// html {
//     height: 100%;
//     font-size: 50px; // 向下兼容 不止vw时候 写死font-size
//     font-size: 13.33333333vw; // 7.5rem === 100vw
//     margin: 0 auto;
// }
// @media (min-width: 700px) { // pc兼容
//     html,body {
//       font-size: 54px;
//       max-width: 540px;
//     }
// }
// @media (max-width: 1024px) { // ipad兼容：ipad最大1024px
//     html,body {
//       max-width: 1024px;
//     }
// }
  

