function HighlightedDate (e, t, n) { this.date = e, this.desc = t, this.style = n } !function (N) { var e = { i18n: { ar: { months: ["كانون الثاني", "شباط", "آذار", "نيسان", "مايو", "حزيران", "تموز", "آب", "أيلول", "تشرين الأول", "تشرين الثاني", "كانون الأول"], dayOfWeek: ["ن", "ث", "ع", "خ", "ج", "س", "ح"] }, ro: { months: ["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], dayOfWeek: ["l", "ma", "mi", "j", "v", "s", "d"] }, id: { months: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], dayOfWeek: ["Sen", "Sel", "Rab", "Kam", "Jum", "Sab", "Min"] }, bg: { months: ["Януари", "Февруари", "Март", "Април", "Май", "Юни", "Юли", "Август", "Септември", "Октомври", "Ноември", "Декември"], dayOfWeek: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"] }, fa: { months: ["فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن", "اسفند"], dayOfWeek: ["یکشنبه", "دوشنبه", "سه شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"] }, ru: { months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"], dayOfWeek: ["Вск", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"] }, uk: { months: ["Січень", "Лютий", "Березень", "Квітень", "Травень", "Червень", "Липень", "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"], dayOfWeek: ["Ндл", "Пнд", "Втр", "Срд", "Чтв", "Птн", "Сбт"] }, en: { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dayOfWeek: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"] }, el: { months: ["Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάιος", "Ιούνιος", "Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"], dayOfWeek: ["Κυρ", "Δευ", "Τρι", "Τετ", "Πεμ", "Παρ", "Σαβ"] }, de: { months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], dayOfWeek: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"] }, nl: { months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], dayOfWeek: ["zo", "ma", "di", "wo", "do", "vr", "za"] }, tr: { months: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"], dayOfWeek: ["Paz", "Pts", "Sal", "Çar", "Per", "Cum", "Cts"] }, fr: { months: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"], dayOfWeek: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"] }, es: { months: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"], dayOfWeek: ["Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sáb"] }, th: { months: ["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"], dayOfWeek: ["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."] }, pl: { months: ["styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec", "lipiec", "sierpień", "wrzesień", "październik", "listopad", "grudzień"], dayOfWeek: ["nd", "pn", "wt", "śr", "cz", "pt", "sb"] }, pt: { months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], dayOfWeek: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"] }, ch: { months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], dayOfWeek: ["日", "一", "二", "三", "四", "五", "六"] }, se: { months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"], dayOfWeek: ["Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"] }, kr_ko: { months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], dayOfWeek: ["일", "월", "화", "수", "목", "금", "토"] }, it: { months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"], dayOfWeek: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"] }, da: { months: ["January", "Februar", "Marts", "April", "Maj", "Juni", "July", "August", "September", "Oktober", "November", "December"], dayOfWeek: ["Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"] }, no: { months: ["Januar", "Februar", "Mars", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Desember"], dayOfWeek: ["Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"] }, ja: { months: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], dayOfWeek: ["日", "月", "火", "水", "木", "金", "土"] }, "mo_vn": { months: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"], dayOfWeek: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"] }, sl: { months: ["Januar", "Februar", "Marec", "April", "Maj", "Junij", "Julij", "Avgust", "September", "Oktober", "November", "December"], dayOfWeek: ["Ned", "Pon", "Tor", "Sre", "Čet", "Pet", "Sob"] }, cs: { months: ["Leden", "Únor", "Březen", "Duben", "Květen", "Červen", "Červenec", "Srpen", "Září", "Říjen", "Listopad", "Prosinec"], dayOfWeek: ["Ne", "Po", "Út", "St", "Čt", "Pá", "So"] }, hu: { months: ["Január", "Február", "Március", "Április", "Május", "Június", "Július", "Augusztus", "Szeptember", "Október", "November", "December"], dayOfWeek: ["Va", "Hé", "Ke", "Sze", "Cs", "Pé", "Szo"] }, az: { months: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], dayOfWeek: ["B", "Be", "Ça", "Ç", "Ca", "C", "Ş"] }, bs: { months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"], dayOfWeek: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"] }, ca: { months: ["Gener", "Febrer", "Març", "Abril", "Maig", "Juny", "Juliol", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"], dayOfWeek: ["Dg", "Dl", "Dt", "Dc", "Dj", "Dv", "Ds"] }, "en-GB": { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dayOfWeek: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"] }, et: { months: ["Jaanuar", "Veebruar", "Märts", "Aprill", "Mai", "Juuni", "Juuli", "August", "September", "Oktoober", "November", "Detsember"], dayOfWeek: ["P", "E", "T", "K", "N", "R", "L"] }, eu: { months: ["Urtarrila", "Otsaila", "Martxoa", "Apirila", "Maiatza", "Ekaina", "Uztaila", "Abuztua", "Iraila", "Urria", "Azaroa", "Abendua"], dayOfWeek: ["Ig.", "Al.", "Ar.", "Az.", "Og.", "Or.", "La."] }, fi: { months: ["Tammikuu", "Helmikuu", "Maaliskuu", "Huhtikuu", "Toukokuu", "Kesäkuu", "Heinäkuu", "Elokuu", "Syyskuu", "Lokakuu", "Marraskuu", "Joulukuu"], dayOfWeek: ["Su", "Ma", "Ti", "Ke", "To", "Pe", "La"] }, gl: { months: ["Xan", "Feb", "Maz", "Abr", "Mai", "Xun", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], dayOfWeek: ["Dom", "Lun", "Mar", "Mer", "Xov", "Ven", "Sab"] }, hr: { months: ["Siječanj", "Veljača", "Ožujak", "Travanj", "Svibanj", "Lipanj", "Srpanj", "Kolovoz", "Rujan", "Listopad", "Studeni", "Prosinac"], dayOfWeek: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"] }, ko: { months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], dayOfWeek: ["일", "월", "화", "수", "목", "금", "토"] }, lt: { months: ["Sausio", "Vasario", "Kovo", "Balandžio", "Gegužės", "Birželio", "Liepos", "Rugpjūčio", "Rugsėjo", "Spalio", "Lapkričio", "Gruodžio"], dayOfWeek: ["Sek", "Pir", "Ant", "Tre", "Ket", "Pen", "Šeš"] }, lv: { months: ["Janvāris", "Februāris", "Marts", "Aprīlis ", "Maijs", "Jūnijs", "Jūlijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"], dayOfWeek: ["Sv", "Pr", "Ot", "Tr", "Ct", "Pk", "St"] }, mk: { months: ["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"], dayOfWeek: ["нед", "пон", "вто", "сре", "чет", "пет", "саб"] }, mn: { months: ["1-р сар", "2-р сар", "3-р сар", "4-р сар", "5-р сар", "6-р сар", "7-р сар", "8-р сар", "9-р сар", "10-р сар", "11-р сар", "12-р сар"], dayOfWeek: ["Дав", "Мяг", "Лха", "Пүр", "Бсн", "Бям", "Ням"] }, "pt-BR": { months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], dayOfWeek: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"] }, sk: { months: ["Január", "Február", "Marec", "Apríl", "Máj", "Jún", "Júl", "August", "September", "Október", "November", "December"], dayOfWeek: ["Ne", "Po", "Ut", "St", "Št", "Pi", "So"] }, sq: { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dayOfWeek: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"] }, "sr-YU": { months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"], dayOfWeek: ["Ned", "Pon", "Uto", "Sre", "čet", "Pet", "Sub"] }, sr: { months: ["јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар"], dayOfWeek: ["нед", "пон", "уто", "сре", "чет", "пет", "суб"] }, sv: { months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"], dayOfWeek: ["Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"] }, zh_tw: { months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], dayOfWeek: ["日", "一", "二", "三", "四", "五", "六"] }, zh_cn: { months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], dayOfWeek: ["日", "一", "二", "三", "四", "五", "六"] }, he: { months: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"], dayOfWeek: ["א'", "ב'", "ג'", "ד'", "ה'", "ו'", "שבת"] }, hy: { months: ["Հունվար", "Փետրվար", "Մարտ", "Ապրիլ", "Մայիս", "Հունիս", "Հուլիս", "Օգոստոս", "Սեպտեմբեր", "Հոկտեմբեր", "Նոյեմբեր", "Դեկտեմբեր"], dayOfWeek: ["Կի", "Երկ", "Երք", "Չոր", "Հնգ", "Ուրբ", "Շբթ"] }, kg: { months: ["Үчтүн айы", "Бирдин айы", "Жалган Куран", "Чын Куран", "Бугу", "Кулжа", "Теке", "Баш Оона", "Аяк Оона", "Тогуздун айы", "Жетинин айы", "Бештин айы"], dayOfWeek: ["Жек", "Дүй", "Шей", "Шар", "Бей", "Жум", "Ише"] }, kr_ko: { months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], dayOfWeek: ["일", "월", "화", "수", "목", "금", "토"] }, mo_vn: { months: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"], dayOfWeek: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"] } }, value: "", lang: "zh_tw", format: "Y/m/d H:i", formatTime: "H:i", formatDate: "Y/m/d", startDate: !1, step: 60, monthChangeSpinner: !0, closeOnDateSelect: !1, closeOnTimeSelect: !1, closeOnWithoutClick: !0, closeOnInputClick: !0, timepicker: !0, datepicker: !0, weeks: !1, defaultTime: !1, defaultDate: !1, minDate: !1, maxDate: !1, minTime: !1, maxTime: !1, allowTimes: [], opened: !1, initTime: !0, inline: !1, theme: "", onSelectDate: function () { }, onSelectTime: function () { }, onChangeMonth: function () { }, onChangeYear: function () { }, onChangeDateTime: function () { }, onShow: function () { }, onClose: function () { }, onGenerate: function () { }, withoutCopyright: !0, inverseButton: !1, hours12: !1, next: "xdsoft_next", prev: "xdsoft_prev", dayOfWeekStart: 0, parentID: "body", timeHeightInTimePicker: 25, timepickerScrollbar: !0, todayButton: !0, prevButton: !0, nextButton: !0, defaultSelect: !0, scrollMonth: !0, scrollTime: !0, scrollInput: !0, lazyInit: !1, mask: !1, validateOnBlur: !0, allowBlank: !0, yearStart: 1950, yearEnd: 2050, monthStart: 0, monthEnd: 11, style: "", id: "", fixed: !1, roundTime: "round", className: "", weekends: [], highlightedDates: [], highlightedPeriods: [], disabledDates: [], yearOffset: 0, beforeShowDay: null, enterLikeTab: !0, showApplyButton: !1 }; Array.prototype.indexOf || (Array.prototype.indexOf = function (e, t) { var n, a; for (n = t || 0, a = this.length; n < a; n += 1)if (this[n] === e) return n; return -1 }), Date.prototype.countDaysInMonth = function () { return new Date(this.getFullYear(), this.getMonth() + 1, 0).getDate() }, N.fn.xdsoftScroller = function (p) { return this.each(function () { function n (e) { var t, n = { x: 0, y: 0 }; return "touchstart" === e.type || "touchmove" === e.type || "touchend" === e.type || "touchcancel" === e.type ? (t = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0], n.x = t.clientX, n.y = t.clientY) : "mousedown" !== e.type && "mouseup" !== e.type && "mousemove" !== e.type && "mouseover" !== e.type && "mouseout" !== e.type && "mouseenter" !== e.type && "mouseleave" !== e.type || (n.x = e.clientX, n.y = e.clientY), n } var o, s, i, u, d, l = N(this), c = 100, a = !1, r = 0, f = 0, h = 0, t = !1, m = 0, g = function () { }; "hide" !== p ? (N(this).hasClass("xdsoft_scroller_box") || (o = l.children().eq(0), s = l[0].clientHeight, i = o[0].offsetHeight, u = N('<div class="xdsoft_scrollbar"></div>'), d = N('<div class="xdsoft_scroller"></div>'), u.append(d), l.addClass("xdsoft_scroller_box").append(u), g = function (e) { var t = n(e).y - r + m; t < 0 && (t = 0), t + d[0].offsetHeight > h && (t = h - d[0].offsetHeight), l.trigger("scroll_element.xdsoft_scroller", [c ? t / c : 0]) }, d.on("touchstart.xdsoft_scroller mousedown.xdsoft_scroller", function (e) { s || l.trigger("resize_scroll.xdsoft_scroller", [p]), r = n(e).y, m = parseInt(d.css("margin-top"), 10), h = u[0].offsetHeight, "mousedown" === e.type ? (document && N(document.body).addClass("xdsoft_noselect"), N([document.body, window]).on("mouseup.xdsoft_scroller", function e () { N([document.body, window]).off("mouseup.xdsoft_scroller", e).off("mousemove.xdsoft_scroller", g).removeClass("xdsoft_noselect") }), N(document.body).on("mousemove.xdsoft_scroller", g)) : (t = !0, e.stopPropagation(), e.preventDefault()) }).on("touchmove", function (e) { t && (e.preventDefault(), g(e)) }).on("touchend touchcancel", function (e) { t = !1, m = 0 }), l.on("scroll_element.xdsoft_scroller", function (e, t) { s || l.trigger("resize_scroll.xdsoft_scroller", [t, !0]), t = 1 < t ? 1 : t < 0 || isNaN(t) ? 0 : t, d.css("margin-top", c * t), setTimeout(function () { o.css("marginTop", -parseInt((o[0].offsetHeight - s) * t, 10)) }, 10) }).on("resize_scroll.xdsoft_scroller", function (e, t, n) { var a, r; s = l[0].clientHeight, i = o[0].offsetHeight, r = (a = s / i) * u[0].offsetHeight, 1 < a ? d.hide() : (d.show(), d.css("height", parseInt(10 < r ? r : 10, 10)), c = u[0].offsetHeight - d[0].offsetHeight, !0 !== n && l.trigger("scroll_element.xdsoft_scroller", [t || Math.abs(parseInt(o.css("marginTop"), 10)) / (i - s)])) }), l.on("mousewheel", function (e) { var t = Math.abs(parseInt(o.css("marginTop"), 10)); return (t -= 20 * e.deltaY) < 0 && (t = 0), l.trigger("scroll_element.xdsoft_scroller", [t / (i - s)]), e.stopPropagation(), !1 }), l.on("touchstart", function (e) { a = n(e), f = Math.abs(parseInt(o.css("marginTop"), 10)) }), l.on("touchmove", function (e) { if (a) { e.preventDefault(); var t = n(e); l.trigger("scroll_element.xdsoft_scroller", [(f - (t.y - a.y)) / (i - s)]) } }), l.on("touchend touchcancel", function (e) { a = !1, f = 0 })), l.trigger("resize_scroll.xdsoft_scroller", [p])) : l.find(".xdsoft_scrollbar").hide() }) }, N.fn.datetimepicker = function (M) { var a, t, h = 17, m = 46, g = 13, p = 27, D = 37, S = 38, O = 39, _ = 40, F = 9, A = 116, W = 65, P = 67, Y = 86, C = 90, J = 89, H = !1, I = N.isPlainObject(M) || !M ? N.extend(!0, {}, e, M) : N.extend(!0, {}, e), r = 0; return a = function (s) { var t, a, n, r, x, y = N("<div " + (I.id ? 'id="' + I.id + '"' : "") + " " + (I.style ? 'style="' + I.style + '"' : "") + ' class="xdsoft_datetimepicker xdsoft_' + I.theme + " xdsoft_noselect " + (I.weeks ? " xdsoft_showweeks" : "") + I.className + '"></div>'), e = N('<div class="xdsoft_copyright"><a target="_blank" href="http://xdsoft.net/jqplugins/datetimepicker/">xdsoft.net</a></div>'), i = N('<div class="xdsoft_datepicker active"></div>'), v = N('<div class="xdsoft_mounthpicker"><button type="button" class="xdsoft_prev"></button><button type="button" class="xdsoft_today_button"></button><div class="xdsoft_label xdsoft_month"><span></span><i></i></div><div class="xdsoft_label xdsoft_year"><span></span><i></i></div><button type="button" class="xdsoft_next"></button></div>'), b = N('<div class="xdsoft_calendar"></div>'), u = N('<div class="xdsoft_timepicker active"><button type="button" class="xdsoft_prev"></button><div class="xdsoft_time_box"></div><button type="button" class="xdsoft_next"></button></div>'), d = u.find(".xdsoft_time_box").eq(0), T = N('<div class="xdsoft_time_variant"></div>'), c = N('<button class="xdsoft_save_selected blue-gradient-button">Save Selected</button>'), k = N('<div class="xdsoft_select xdsoft_monthselect"><div></div></div>'), w = N('<div class="xdsoft_select xdsoft_yearselect"><div></div></div>'), f = !1, o = 0; function l () { var e, t = !1; return I.startDate ? t = x.strToDate(I.startDate) : (t = I.value || (s && s.val && s.val() ? s.val() : "")) ? t = x.strToDateTime(t) : I.defaultDate && (t = x.strToDate(I.defaultDate), I.defaultTime && (e = x.strtotime(I.defaultTime), t.setHours(e.getHours()), t.setMinutes(e.getMinutes()))), t && x.isValidDate(t) ? y.data("changed", !0) : t = "", t || 0 } v.find(".xdsoft_month span").after(k), v.find(".xdsoft_year span").after(w), v.find(".xdsoft_month,.xdsoft_year").on("mousedown.xdsoft", function (e) { var t, n, a = N(this).find(".xdsoft_select").eq(0), r = 0, o = 0, s = a.is(":visible"); for (v.find(".xdsoft_select").hide(), x.currentTime && (r = x.currentTime[N(this).hasClass("xdsoft_month") ? "getMonth" : "getFullYear"]()), a[s ? "hide" : "show"](), t = a.find("div.xdsoft_option"), n = 0; n < t.length && t.eq(n).data("value") !== r; n += 1)o += t[0].offsetHeight; return a.xdsoftScroller(o / (a.children()[0].offsetHeight - a[0].clientHeight)), e.stopPropagation(), !1 }), v.find(".xdsoft_select").xdsoftScroller().on("mousedown.xdsoft", function (e) { e.stopPropagation(), e.preventDefault() }).on("mousedown.xdsoft", ".xdsoft_option", function (e) { void 0 !== x.currentTime && null !== x.currentTime || (x.currentTime = x.now()); var t = x.currentTime.getFullYear(); x && x.currentTime && x.currentTime[N(this).parent().parent().hasClass("xdsoft_monthselect") ? "setMonth" : "setFullYear"](N(this).data("value")), N(this).parent().parent().hide(), y.trigger("xchange.xdsoft"), I.onChangeMonth && N.isFunction(I.onChangeMonth) && I.onChangeMonth.call(y, x.currentTime, y.data("input")), t !== x.currentTime.getFullYear() && N.isFunction(I.onChangeYear) && I.onChangeYear.call(y, x.currentTime, y.data("input")) }), y.setOptions = function (e) { if (I = N.extend(!0, {}, I, e), e.allowTimes && N.isArray(e.allowTimes) && e.allowTimes.length && (I.allowTimes = N.extend(!0, [], e.allowTimes)), e.weekends && N.isArray(e.weekends) && e.weekends.length && (I.weekends = N.extend(!0, [], e.weekends)), e.highlightedDates && N.isArray(e.highlightedDates) && e.highlightedDates.length) { var l = new Object; N.each(e.highlightedDates, function (e, t) { var n = N.map(t.split(","), N.trim), a = new HighlightedDate(Date.parseDate(n[0], I.formatDate), n[1], n[2]), r = a.date.dateFormat(I.formatDate); if (r in l) { var o = l[r].desc; o && o.length && a.desc && a.desc.length && (l[r].desc = o + "\n" + a.desc) } else l[r] = a }), I.highlightedDates = N.extend(!0, [], l) } if (e.highlightedPeriods && N.isArray(e.highlightedPeriods) && e.highlightedPeriods.length) { l = N.extend(!0, [], I.highlightedDates); N.each(e.highlightedPeriods, function (e, t) { for (var n = N.map(t.split(","), N.trim), a = Date.parseDate(n[0], I.formatDate), r = Date.parseDate(n[1], I.formatDate), o = n[2], s = n[3]; a <= r;) { var i = new HighlightedDate(a, o, s), u = a.dateFormat(I.formatDate); if (a.setDate(a.getDate() + 1), u in l) { var d = l[u].desc; d && d.length && i.desc && i.desc.length && (l[u].desc = d + "\n" + i.desc) } else l[u] = i } }), I.highlightedDates = N.extend(!0, [], l) } if (e.disabledDates && N.isArray(e.disabledDates) && e.disabledDates.length && (I.disabledDates = N.extend(!0, [], e.disabledDates)), !I.open && !I.opened || I.inline || s.trigger("open.xdsoft"), I.inline && (f = !0, y.addClass("xdsoft_inline"), s.after(y).hide()), I.inverseButton && (I.next = "xdsoft_prev", I.prev = "xdsoft_next"), I.datepicker ? i.addClass("active") : i.removeClass("active"), I.timepicker ? u.addClass("active") : u.removeClass("active"), I.value && (x.setCurrentTime(I.value), s && s.val && s.val(x.str)), isNaN(I.dayOfWeekStart) ? I.dayOfWeekStart = 0 : I.dayOfWeekStart = parseInt(I.dayOfWeekStart, 10) % 7, I.timepickerScrollbar || d.xdsoftScroller("hide"), I.minDate && /^-(.*)$/.test(I.minDate) && (I.minDate = x.strToDateTime(I.minDate).dateFormat(I.formatDate)), I.maxDate && /^\+(.*)$/.test(I.maxDate) && (I.maxDate = x.strToDateTime(I.maxDate).dateFormat(I.formatDate)), c.toggle(I.showApplyButton), v.find(".xdsoft_today_button").css("visibility", I.todayButton ? "visible" : "hidden"), v.find("." + I.prev).css("visibility", I.prevButton ? "visible" : "hidden"), v.find("." + I.next).css("visibility", I.nextButton ? "visible" : "hidden"), I.mask) { function o (e, t) { var n = e.replace(/([\[\]\/\{\}\(\)\-\.\+]{1})/g, "\\$1").replace(/_/g, "{digit+}").replace(/([0-9]{1})/g, "{digit$1}").replace(/\{digit([0-9]{1})\}/g, "[0-$1_]{1}").replace(/\{digit[\+]\}/g, "[0-9_]{1}"); return new RegExp(n).test(t) } s.off("keydown.xdsoft"), !0 === I.mask && (I.mask = I.format.replace(/Y/g, "9999").replace(/F/g, "9999").replace(/m/g, "19").replace(/d/g, "39").replace(/H/g, "29").replace(/i/g, "59").replace(/s/g, "59")), "string" === N.type(I.mask) && (o(I.mask, s.val()) || s.val(I.mask.replace(/[0-9]/g, "_")), s.on("keydown.xdsoft", function (e) { var t, n, a = this.value, r = e.which; if (48 <= r && r <= 57 || 96 <= r && r <= 105 || 8 === r || r === m) { for (t = function (e) { try { if (document.selection && document.selection.createRange) return document.selection.createRange().getBookmark().charCodeAt(2) - 2; if (e.setSelectionRange) return e.selectionStart } catch (e) { return 0 } }(this), n = 8 !== r && r !== m ? String.fromCharCode(96 <= r && r <= 105 ? r - 48 : r) : "_", 8 !== r && r !== m || !t || (t -= 1, n = "_"); /[^0-9_]/.test(I.mask.substr(t, 1)) && t < I.mask.length && 0 < t;)t += 8 === r || r === m ? -1 : 1; if (a = a.substr(0, t) + n + a.substr(t + 1), "" === N.trim(a)) a = I.mask.replace(/[0-9]/g, "_"); else if (t === I.mask.length) return e.preventDefault(), !1; for (t += 8 === r || r === m ? 0 : 1; /[^0-9_]/.test(I.mask.substr(t, 1)) && t < I.mask.length && 0 < t;)t += 8 === r || r === m ? -1 : 1; o(I.mask, a) ? (this.value = a, function (e, t) { if (!(e = "string" == typeof e || e instanceof String ? document.getElementById(e) : e)) return; if (e.createTextRange) { var n = e.createTextRange(); return n.collapse(!0), n.moveEnd("character", t), n.moveStart("character", t), n.select() } !e.setSelectionRange || e.setSelectionRange(t, t) }(this, t)) : "" === N.trim(a) ? this.value = I.mask.replace(/[0-9]/g, "_") : s.trigger("error_input.xdsoft") } else if (-1 !== [W, P, Y, C, J].indexOf(r) && H || -1 !== [p, S, _, D, O, A, h, F, g].indexOf(r)) return !0; return e.preventDefault(), !1 })) } I.validateOnBlur && s.off("blur.xdsoft").on("blur.xdsoft", function () { if (I.allowBlank && !N.trim(N(this).val()).length) N(this).val(null), y.data("xdsoft_datetime").empty(); else if (Date.parseDate(N(this).val(), I.format)) y.data("xdsoft_datetime").setCurrentTime(N(this).val()); else { var e = +[N(this).val()[0], N(this).val()[1]].join(""), t = +[N(this).val()[2], N(this).val()[3]].join(""); !I.datepicker && I.timepicker && 0 <= e && e < 24 && 0 <= t && t < 60 ? N(this).val([e, t].map(function (e) { return 9 < e ? e : "0" + e }).join(":")) : N(this).val(x.now().dateFormat(I.format)), y.data("xdsoft_datetime").setCurrentTime(N(this).val()) } y.trigger("changedatetime.xdsoft") }), I.dayOfWeekStartPrev = 0 === I.dayOfWeekStart ? 6 : I.dayOfWeekStart - 1, y.trigger("xchange.xdsoft").trigger("afterOpen.xdsoft") }, y.data("options", I).on("mousedown.xdsoft", function (e) { return e.stopPropagation(), e.preventDefault(), w.hide(), k.hide(), !1 }), d.append(T), d.xdsoftScroller(), y.on("afterOpen.xdsoft", function () { d.xdsoftScroller() }), y.append(i).append(u), !0 !== I.withoutCopyright && y.append(e), i.append(v).append(b).append(c), N(I.parentID).append(y), x = new function () { var r = this; r.now = function (e) { var t, n, a = new Date; return !e && I.defaultDate && (t = r.strToDate(I.defaultDate), a.setFullYear(t.getFullYear()), a.setMonth(t.getMonth()), a.setDate(t.getDate())), I.yearOffset && a.setFullYear(a.getFullYear() + I.yearOffset), !e && I.defaultTime && (n = r.strtotime(I.defaultTime), a.setHours(n.getHours()), a.setMinutes(n.getMinutes())), a }, r.isValidDate = function (e) { return "[object Date]" === Object.prototype.toString.call(e) && !isNaN(e.getTime()) }, r.setCurrentTime = function (e) { r.currentTime = "string" == typeof e ? r.strToDateTime(e) : r.isValidDate(e) ? e : r.now(), y.trigger("xchange.xdsoft") }, r.empty = function () { r.currentTime = null }, r.getCurrentTime = function (e) { return r.currentTime }, r.nextMonth = function () { void 0 !== r.currentTime && null !== r.currentTime || (r.currentTime = r.now()); var e, t = r.currentTime.getMonth() + 1; return 12 === t && (r.currentTime.setFullYear(r.currentTime.getFullYear() + 1), t = 0), e = r.currentTime.getFullYear(), r.currentTime.setDate(Math.min(new Date(r.currentTime.getFullYear(), t + 1, 0).getDate(), r.currentTime.getDate())), r.currentTime.setMonth(t), I.onChangeMonth && N.isFunction(I.onChangeMonth) && I.onChangeMonth.call(y, x.currentTime, y.data("input")), e !== r.currentTime.getFullYear() && N.isFunction(I.onChangeYear) && I.onChangeYear.call(y, x.currentTime, y.data("input")), y.trigger("xchange.xdsoft"), t }, r.prevMonth = function () { void 0 !== r.currentTime && null !== r.currentTime || (r.currentTime = r.now()); var e = r.currentTime.getMonth() - 1; return -1 === e && (r.currentTime.setFullYear(r.currentTime.getFullYear() - 1), e = 11), r.currentTime.setDate(Math.min(new Date(r.currentTime.getFullYear(), e + 1, 0).getDate(), r.currentTime.getDate())), r.currentTime.setMonth(e), I.onChangeMonth && N.isFunction(I.onChangeMonth) && I.onChangeMonth.call(y, x.currentTime, y.data("input")), y.trigger("xchange.xdsoft"), e }, r.getWeekOfYear = function (e) { var t = new Date(e.getFullYear(), 0, 1); return Math.ceil(((e - t) / 864e5 + t.getDay() + 1) / 7) }, r.strToDateTime = function (e) { var t, n, a = []; return e && e instanceof Date && r.isValidDate(e) ? e : ((a = /^(\+|\-)(.*)$/.exec(e)) && (a[2] = Date.parseDate(a[2], I.formatDate)), n = a && a[2] ? (t = a[2].getTime() - 6e4 * a[2].getTimezoneOffset(), new Date(x.now().getTime() + parseInt(a[1] + "1", 10) * t)) : e ? Date.parseDate(e, I.format) : r.now(), r.isValidDate(n) || (n = r.now()), n) }, r.strToDate = function (e) { if (e && e instanceof Date && r.isValidDate(e)) return e; var t = e ? Date.parseDate(e, I.formatDate) : r.now(!0); return r.isValidDate(t) || (t = r.now(!0)), t }, r.strtotime = function (e) { if (e && e instanceof Date && r.isValidDate(e)) return e; var t = e ? Date.parseDate(e, I.formatTime) : r.now(!0); return r.isValidDate(t) || (t = r.now(!0)), t }, r.str = function () { return r.currentTime.dateFormat(I.format) }, r.currentTime = this.now() }, c.on("click", function (e) { e.preventDefault(), y.data("changed", !0), x.setCurrentTime(l()), s.val(x.str()), y.trigger("close.xdsoft") }), v.find(".xdsoft_today_button").on("mousedown.xdsoft", function () { y.data("changed", !0), x.setCurrentTime(0), y.trigger("afterOpen.xdsoft") }).on("dblclick.xdsoft", function () { s.val(x.str()), y.trigger("close.xdsoft") }), v.find(".xdsoft_prev,.xdsoft_next").on("mousedown.xdsoft", function () { var n = N(this), a = 0, r = !1; !function e (t) { n.hasClass(I.next) ? x.nextMonth() : n.hasClass(I.prev) && x.prevMonth(), I.monthChangeSpinner && (r || (a = setTimeout(e, t || 100))) }(500), N([document.body, window]).on("mouseup.xdsoft", function e () { clearTimeout(a), r = !0, N([document.body, window]).off("mouseup.xdsoft", e) }) }), u.find(".xdsoft_prev,.xdsoft_next").on("mousedown.xdsoft", function () { var o = N(this), s = 0, i = !1, u = 110; !function e (t) { var n = d[0].clientHeight, a = T[0].offsetHeight, r = Math.abs(parseInt(T.css("marginTop"), 10)); o.hasClass(I.next) && a - n - I.timeHeightInTimePicker >= r ? T.css("marginTop", "-" + (r + I.timeHeightInTimePicker) + "px") : o.hasClass(I.prev) && 0 <= r - I.timeHeightInTimePicker && T.css("marginTop", "-" + (r - I.timeHeightInTimePicker) + "px"), d.trigger("scroll_element.xdsoft_scroller", [Math.abs(parseInt(T.css("marginTop"), 10) / (a - n))]), u = 10 < u ? 10 : u - 10, i || (s = setTimeout(e, t || u)) }(500), N([document.body, window]).on("mouseup.xdsoft", function e () { clearTimeout(s), i = !0, N([document.body, window]).off("mouseup.xdsoft", e) }) }), t = 0, y.on("xchange.xdsoft", function (e) { clearTimeout(t), t = setTimeout(function () { void 0 !== x.currentTime && null !== x.currentTime || (x.currentTime = x.now()); for (var e, t, n, a, r, o, s, i, u = "", d = new Date(x.currentTime.getFullYear(), x.currentTime.getMonth(), 1, 12, 0, 0), l = 0, c = x.now(), f = !1, h = !1, m = [], g = !0, p = ""; d.getDay() !== I.dayOfWeekStart;)d.setDate(d.getDate() - 1); for (u += "<table><thead><tr>", I.weeks && (u += "<th></th>"), e = 0; e < 7; e += 1)u += "<th>" + I.i18n[I.lang].dayOfWeek[(e + I.dayOfWeekStart) % 7] + "</th>"; for (u += "</tr></thead>", u += "<tbody>", !1 !== I.maxDate && (f = x.strToDate(I.maxDate), f = new Date(f.getFullYear(), f.getMonth(), f.getDate(), 23, 59, 59, 999)), !1 !== I.minDate && (h = x.strToDate(I.minDate), h = new Date(h.getFullYear(), h.getMonth(), h.getDate())); l < x.currentTime.countDaysInMonth() || d.getDay() !== I.dayOfWeekStart || x.currentTime.getMonth() === d.getMonth();) { if (m = [], l += 1, t = d.getDate(), n = d.getFullYear(), a = d.getMonth(), r = x.getWeekOfYear(d), i = "", m.push("xdsoft_date"), o = I.beforeShowDay && N.isFunction(I.beforeShowDay.call) ? I.beforeShowDay.call(y, d) : null, !1 !== f && f < d || !1 !== h && d < h || o && !1 === o[0] ? m.push("xdsoft_disabled") : -1 !== I.disabledDates.indexOf(d.dateFormat(I.formatDate)) && m.push("xdsoft_disabled"), o && "" !== o[1] && m.push(o[1]), x.currentTime.getMonth() !== a && m.push("xdsoft_other_month"), (I.defaultSelect || y.data("changed")) && x.currentTime.dateFormat(I.formatDate) === d.dateFormat(I.formatDate) && m.push("xdsoft_current"), c.dateFormat(I.formatDate) === d.dateFormat(I.formatDate) && m.push("xdsoft_today"), 0 !== d.getDay() && 6 !== d.getDay() && !~I.weekends.indexOf(d.dateFormat(I.formatDate)) || m.push("xdsoft_weekend"), d.dateFormat(I.formatDate) in I.highlightedDates) { var D = I.highlightedDates[d.dateFormat(I.formatDate)]; m.push(void 0 === D.style ? "xdsoft_highlighted_default" : D.style), i = void 0 === D.desc ? "" : D.desc } I.beforeShowDay && N.isFunction(I.beforeShowDay) && m.push(I.beforeShowDay(d)), g && (u += "<tr>", g = !1, I.weeks && (u += "<th>" + r + "</th>")), u += '<td data-date="' + t + '" data-month="' + a + '" data-year="' + n + '" class="xdsoft_date xdsoft_day_of_week' + d.getDay() + " " + m.join(" ") + '" title="' + i + '"><div>' + t + "</div></td>", d.getDay() === I.dayOfWeekStartPrev && (u += "</tr>", g = !0), d.setDate(t + 1) } if (u += "</tbody></table>", b.html(u), v.find(".xdsoft_label span").eq(0).text(I.i18n[I.lang].months[x.currentTime.getMonth()]), v.find(".xdsoft_label span").eq(1).text(x.currentTime.getFullYear()), a = p = "", s = function (e, t) { var n = x.now(); n.setHours(e), e = parseInt(n.getHours(), 10), n.setMinutes(t), t = parseInt(n.getMinutes(), 10); var a = new Date(x.currentTime); a.setHours(e), a.setMinutes(t), (!(m = []) !== I.minDateTime && I.minDateTime > a || !1 !== I.maxTime && x.strtotime(I.maxTime).getTime() < n.getTime() || !1 !== I.minTime && x.strtotime(I.minTime).getTime() > n.getTime()) && m.push("xdsoft_disabled"); var r = new Date(x.currentTime); r.setHours(parseInt(x.currentTime.getHours(), 10)), r.setMinutes(Math[I.roundTime](x.currentTime.getMinutes() / I.step) * I.step), (I.initTime || I.defaultSelect || y.data("changed")) && r.getHours() === parseInt(e, 10) && (59 < I.step || r.getMinutes() === parseInt(t, 10)) && (I.defaultSelect || y.data("changed") ? m.push("xdsoft_current") : I.initTime && m.push("xdsoft_init_time")), parseInt(c.getHours(), 10) === parseInt(e, 10) && parseInt(c.getMinutes(), 10) === parseInt(t, 10) && m.push("xdsoft_today"), p += '<div class="xdsoft_time ' + m.join(" ") + '" data-hour="' + e + '" data-minute="' + t + '">' + n.dateFormat(I.formatTime) + "</div>" }, I.allowTimes && N.isArray(I.allowTimes) && I.allowTimes.length) for (l = 0; l < I.allowTimes.length; l += 1)s(x.strtotime(I.allowTimes[l]).getHours(), a = x.strtotime(I.allowTimes[l]).getMinutes()); else for (e = l = 0; l < (I.hours12 ? 12 : 24); l += 1)for (e = 0; e < 60; e += I.step)s((l < 10 ? "0" : "") + l, a = (e < 10 ? "0" : "") + e); for (T.html(p), M = "", l = 0, l = parseInt(I.yearStart, 10) + I.yearOffset; l <= parseInt(I.yearEnd, 10) + I.yearOffset; l += 1)M += '<div class="xdsoft_option ' + (x.currentTime.getFullYear() === l ? "xdsoft_current" : "") + '" data-value="' + l + '">' + l + "</div>"; for (w.children().eq(0).html(M), l = parseInt(I.monthStart), M = ""; l <= parseInt(I.monthEnd); l += 1)M += '<div class="xdsoft_option ' + (x.currentTime.getMonth() === l ? "xdsoft_current" : "") + '" data-value="' + l + '">' + I.i18n[I.lang].months[l] + "</div>"; k.children().eq(0).html(M), N(y).trigger("generate.xdsoft") }, 10), e.stopPropagation() }).on("afterOpen.xdsoft", function () { var e, t, n, a; I.timepicker && (T.find(".xdsoft_current").length ? e = ".xdsoft_current" : T.find(".xdsoft_init_time").length && (e = ".xdsoft_init_time"), e ? (t = d[0].clientHeight, (n = T[0].offsetHeight) - t < (a = T.find(e).index() * I.timeHeightInTimePicker + 1) && (a = n - t), d.trigger("scroll_element.xdsoft_scroller", [parseInt(a, 10) / (n - t)])) : d.trigger("scroll_element.xdsoft_scroller", [0])) }), a = 0, b.on("click.xdsoft", "td", function (e) { e.stopPropagation(), a += 1; var t = N(this), n = x.currentTime; if (null == n && (x.currentTime = x.now(), n = x.currentTime), t.hasClass("xdsoft_disabled")) return !1; n.setDate(1), n.setFullYear(t.data("year")), n.setMonth(t.data("month")), n.setDate(t.data("date")), y.trigger("select.xdsoft", [n]), s.val(x.str()), (1 < a || !0 === I.closeOnDateSelect || 0 === I.closeOnDateSelect && !I.timepicker) && !I.inline && y.trigger("close.xdsoft"), I.onSelectDate && N.isFunction(I.onSelectDate) && I.onSelectDate.call(y, x.currentTime, y.data("input"), e), y.data("changed", !0), y.trigger("xchange.xdsoft"), y.trigger("changedatetime.xdsoft"), setTimeout(function () { a = 0 }, 200) }), T.on("click.xdsoft", "div", function (e) { e.stopPropagation(); var t = N(this), n = x.currentTime; if (null == n && (x.currentTime = x.now(), n = x.currentTime), t.hasClass("xdsoft_disabled")) return !1; n.setHours(t.data("hour")), n.setMinutes(t.data("minute")), y.trigger("select.xdsoft", [n]), y.data("input").val(x.str()), !0 !== I.inline && !0 === I.closeOnTimeSelect && y.trigger("close.xdsoft"), I.onSelectTime && N.isFunction(I.onSelectTime) && I.onSelectTime.call(y, x.currentTime, y.data("input"), e), y.data("changed", !0), y.trigger("xchange.xdsoft"), y.trigger("changedatetime.xdsoft") }), i.on("mousewheel.xdsoft", function (e) { return !I.scrollMonth || (e.deltaY < 0 ? x.nextMonth() : x.prevMonth(), !1) }), s.on("mousewheel.xdsoft", function (e) { return !I.scrollInput || (!I.datepicker && I.timepicker ? (0 <= (n = T.find(".xdsoft_current").length ? T.find(".xdsoft_current").eq(0).index() : 0) + e.deltaY && n + e.deltaY < T.children().length && (n += e.deltaY), T.children().eq(n).length && T.children().eq(n).trigger("mousedown"), !1) : I.datepicker && !I.timepicker ? (i.trigger(e, [e.deltaY, e.deltaX, e.deltaY]), s.val && s.val(x.str()), y.trigger("changedatetime.xdsoft"), !1) : void 0) }), y.on("changedatetime.xdsoft", function (e) { if (I.onChangeDateTime && N.isFunction(I.onChangeDateTime)) { var t = y.data("input"); I.onChangeDateTime.call(y, x.currentTime, t, e), delete I.value, t.trigger("change") } }).on("generate.xdsoft", function () { I.onGenerate && N.isFunction(I.onGenerate) && I.onGenerate.call(y, x.currentTime, y.data("input")), f && (y.trigger("afterOpen.xdsoft"), f = !1) }).on("click.xdsoft", function (e) { e.stopPropagation() }), n = 0, r = function () { var e = y.data("input").offset(), t = e.top + y.data("input")[0].offsetHeight - 1, n = e.left, a = "absolute"; I.fixed ? (t -= N(window).scrollTop(), n -= N(window).scrollLeft(), a = "fixed") : (t + y[0].offsetHeight > N(window).height() + N(window).scrollTop() && (t = e.top - y[0].offsetHeight + 1), t < 0 && (t = 0), n + y[0].offsetWidth > N(window).width() && (n = N(window).width() - y[0].offsetWidth)), y.css({ left: n, top: t, position: a }) }, y.on("open.xdsoft", function (e) { var t = !0; I.onShow && N.isFunction(I.onShow) && (t = I.onShow.call(y, x.currentTime, y.data("input"), e)), !1 !== t && (y.show(), r(), N(window).off("resize.xdsoft", r).on("resize.xdsoft", r), I.closeOnWithoutClick && N([document.body, window]).on("mousedown.xdsoft", function e () { y.trigger("close.xdsoft"), N([document.body, window]).off("mousedown.xdsoft", e) })) }).on("close.xdsoft", function (e) { var t = !0; v.find(".xdsoft_month,.xdsoft_year").find(".xdsoft_select").hide(), I.onClose && N.isFunction(I.onClose) && (t = I.onClose.call(y, x.currentTime, y.data("input"), e)), !1 === t || I.opened || I.inline || y.hide(), e.stopPropagation() }).on("toggle.xdsoft", function (e) { y.is(":visible") ? y.trigger("close.xdsoft") : y.trigger("open.xdsoft") }).data("input", s), o = 0, y.data("xdsoft_datetime", x), y.setOptions(I), x.setCurrentTime(l()), s.data("xdsoft_datetimepicker", y).on("open.xdsoft focusin.xdsoft mousedown.xdsoft", function (e) { s.is(":disabled") || s.data("xdsoft_datetimepicker").is(":visible") && I.closeOnInputClick || (clearTimeout(o), o = setTimeout(function () { s.is(":disabled") || (f = !0, x.setCurrentTime(l()), y.trigger("open.xdsoft")) }, 100)) }).on("keydown.xdsoft", function (e) { this.value; var t, n = e.which; return -1 !== [g].indexOf(n) && I.enterLikeTab ? (t = N("input:visible,textarea:visible"), y.trigger("close.xdsoft"), t.eq(t.index(this) + 1).focus(), !1) : -1 !== [F].indexOf(n) ? (y.trigger("close.xdsoft"), !0) : void 0 }) }, t = function (e) { var t = e.data("xdsoft_datetimepicker"); t && (t.data("xdsoft_datetime", null), t.remove(), e.data("xdsoft_datetimepicker", null).off(".xdsoft"), N(window).off("resize.xdsoft"), N([window, document.body]).off("mousedown.xdsoft"), e.unmousewheel && e.unmousewheel()) }, N(document).off("keydown.xdsoftctrl keyup.xdsoftctrl").on("keydown.xdsoftctrl", function (e) { e.keyCode === h && (H = !0) }).on("keyup.xdsoftctrl", function (e) { e.keyCode === h && (H = !1) }), this.each(function () { var e = N(this).data("xdsoft_datetimepicker"); if (e) { if ("string" === N.type(M)) switch (M) { case "show": N(this).select().focus(), e.trigger("open.xdsoft"); break; case "hide": e.trigger("close.xdsoft"); break; case "toggle": e.trigger("toggle.xdsoft"); break; case "destroy": t(N(this)); break; case "reset": this.value = this.defaultValue, this.value && e.data("xdsoft_datetime").isValidDate(Date.parseDate(this.value, I.format)) || e.data("changed", !1), e.data("xdsoft_datetime").setCurrentTime(this.value); break; case "validate": e.data("input").trigger("blur.xdsoft") } else e.setOptions(M); return 0 } "string" !== N.type(M) && (!I.lazyInit || I.open || I.inline ? a(N(this)) : function (n) { n.on("open.xdsoft focusin.xdsoft mousedown.xdsoft", function e (t) { n.is(":disabled") || n.data("xdsoft_datetimepicker") || (clearTimeout(r), r = setTimeout(function () { n.data("xdsoft_datetimepicker") || a(n), n.off("open.xdsoft focusin.xdsoft mousedown.xdsoft", e).trigger("open.xdsoft") }, 100)) }) }(N(this))) }) }, N.fn.datetimepicker.defaults = e }(jQuery), function () { var Md; Md = function (f) { function t (e) { var t = e || window.event, n = D.call(arguments, 1), a = 0, r = 0, o = 0, s = 0, i = 0, u = 0; if ((e = f.event.fix(t)).type = "mousewheel", "detail" in t && (o = -1 * t.detail), "wheelDelta" in t && (o = t.wheelDelta), "wheelDeltaY" in t && (o = t.wheelDeltaY), "wheelDeltaX" in t && (r = -1 * t.wheelDeltaX), "axis" in t && t.axis === t.HORIZONTAL_AXIS && (r = -1 * o, o = 0), a = 0 === o ? r : o, "deltaY" in t && (a = o = -1 * t.deltaY), "deltaX" in t && (r = t.deltaX, 0 === o && (a = -1 * r)), 0 !== o || 0 !== r) { if (1 === t.deltaMode) { var d = f.data(this, "mousewheel-line-height"); a *= d, o *= d, r *= d } else if (2 === t.deltaMode) { var l = f.data(this, "mousewheel-page-height"); a *= l, o *= l, r *= l } if (s = Math.max(Math.abs(o), Math.abs(r)), (!p || s < p) && (m(t, p = s) && (p /= 40)), m(t, s) && (a /= 40, r /= 40, o /= 40), a = Math[1 <= a ? "floor" : "ceil"](a / p), r = Math[1 <= r ? "floor" : "ceil"](r / p), o = Math[1 <= o ? "floor" : "ceil"](o / p), x.settings.normalizeOffset && this.getBoundingClientRect) { var c = this.getBoundingClientRect(); i = e.clientX - c.left, u = e.clientY - c.top } return e.deltaX = r, e.deltaY = o, e.deltaFactor = p, e.offsetX = i, e.offsetY = u, e.deltaMode = 0, n.unshift(e, a, r, o), g && clearTimeout(g), g = setTimeout(h, 200), (f.event.dispatch || f.event.handle).apply(this, n) } } function h () { p = null } function m (e, t) { return x.settings.adjustOldDeltas && "mousewheel" === e.type && t % 120 == 0 } var g, p, e = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"], n = "onwheel" in document || 9 <= document.documentMode ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"], D = Array.prototype.slice; if (f.event.fixHooks) for (var a = e.length; a;)f.event.fixHooks[e[--a]] = f.event.mouseHooks; var x = f.event.special.mousewheel = { version: "3.1.12", setup: function () { if (this.addEventListener) for (var e = n.length; e;)this.addEventListener(n[--e], t, !1); else this.onmousewheel = t; f.data(this, "mousewheel-line-height", x.getLineHeight(this)), f.data(this, "mousewheel-page-height", x.getPageHeight(this)) }, teardown: function () { if (this.removeEventListener) for (var e = n.length; e;)this.removeEventListener(n[--e], t, !1); else this.onmousewheel = null; f.removeData(this, "mousewheel-line-height"), f.removeData(this, "mousewheel-page-height") }, getLineHeight: function (e) { var t = f(e), n = t["offsetParent" in f.fn ? "offsetParent" : "parent"](); return n.length || (n = f("body")), parseInt(n.css("fontSize"), 10) || parseInt(t.css("fontSize"), 10) || 16 }, getPageHeight: function (e) { return f(e).height() }, settings: { adjustOldDeltas: !0, normalizeOffset: !0 } }; f.fn.extend({ mousewheel: function (e) { return e ? this.bind("mousewheel", e) : this.trigger("mousewheel") }, unmousewheel: function (e) { return this.unbind("mousewheel", e) } }) }, "function" == typeof define && define.amd ? define(["jquery"], Md) : "object" == typeof exports ? module.exports = Md : Md(jQuery), Date.parseFunctions = { count: 0 }, Date.parseRegexes = [], Date.formatFunctions = { count: 0 }, Date.prototype.dateFormat = function (e) { return "unixtime" == e ? parseInt(this.getTime() / 1e3) : (null == Date.formatFunctions[e] && Date.createNewFormat(e), this[Date.formatFunctions[e]]()) }, Date.createNewFormat = function (format) { var funcName = "format" + Date.formatFunctions.count++; Date.formatFunctions[format] = funcName; for (var codePrefix = "Date.prototype." + funcName + " = function() {return ", code = "", special = !1, ch = "", i = 0; i < format.length; ++i)ch = format.charAt(i), special || "\\" != ch ? special ? (special = !1, code += "'" + String.escape(ch) + "' + ") : code += Date.getFormatCode(ch) : special = !0; code = 0 == code.length ? '""' : code.substring(0, code.length - 3), eval(codePrefix + code + ";}") }, Date.getFormatCode = function (e) { switch (e) { case "d": return "String.leftPad(this.getDate(), 2, '0') + "; case "D": return "Date.dayNames[this.getDay()].substring(0, 3) + "; case "j": return "this.getDate() + "; case "l": return "Date.dayNames[this.getDay()] + "; case "S": return "this.getSuffix() + "; case "w": return "this.getDay() + "; case "z": return "this.getDayOfYear() + "; case "W": return "this.getWeekOfYear() + "; case "F": return "Date.monthNames[this.getMonth()] + "; case "m": return "String.leftPad(this.getMonth() + 1, 2, '0') + "; case "M": return "Date.monthNames[this.getMonth()].substring(0, 3) + "; case "n": return "(this.getMonth() + 1) + "; case "t": return "this.getDaysInMonth() + "; case "L": return "(this.isLeapYear() ? 1 : 0) + "; case "Y": return "this.getFullYear() + "; case "y": return "('' + this.getFullYear()).substring(2, 4) + "; case "a": return "(this.getHours() < 12 ? 'am' : 'pm') + "; case "A": return "(this.getHours() < 12 ? 'AM' : 'PM') + "; case "g": return "((this.getHours() %12) ? this.getHours() % 12 : 12) + "; case "G": return "this.getHours() + "; case "h": return "String.leftPad((this.getHours() %12) ? this.getHours() % 12 : 12, 2, '0') + "; case "H": return "String.leftPad(this.getHours(), 2, '0') + "; case "i": return "String.leftPad(this.getMinutes(), 2, '0') + "; case "s": return "String.leftPad(this.getSeconds(), 2, '0') + "; case "O": return "this.getGMTOffset() + "; case "T": return "this.getTimezone() + "; case "Z": return "(this.getTimezoneOffset() * -60) + "; default: return "'" + String.escape(e) + "' + " } }, Date.parseDate = function (e, t) { if ("unixtime" == t) return new Date(isNaN(parseInt(e)) ? 0 : 1e3 * parseInt(e)); null == Date.parseFunctions[t] && Date.createParser(t); var n = Date.parseFunctions[t]; return Date[n](e) }, Date.createParser = function (format) { var funcName = "parse" + Date.parseFunctions.count++, regexNum = Date.parseRegexes.length, currentGroup = 1; Date.parseFunctions[format] = funcName; for (var code = "Date." + funcName + " = function(input) {\nvar y = -1, m = -1, d = -1, h = -1, i = -1, s = -1, z = -1;\nvar d = new Date();\ny = d.getFullYear();\nm = d.getMonth();\nd = d.getDate();\nvar results = input.match(Date.parseRegexes[" + regexNum + "]);\nif (results && results.length > 0) {", regex = "", special = !1, ch = "", i = 0; i < format.length; ++i)ch = format.charAt(i), special || "\\" != ch ? special ? (special = !1, regex += String.escape(ch)) : (obj = Date.formatCodeToRegex(ch, currentGroup), currentGroup += obj.g, regex += obj.s, obj.g && obj.c && (code += obj.c)) : special = !0; code += "if (y > 0 && z > 0){\nvar doyDate = new Date(y,0);\ndoyDate.setDate(z);\nm = doyDate.getMonth();\nd = doyDate.getDate();\n}", code += "if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0 && s >= 0)\n{return new Date(y, m, d, h, i, s);}\nelse if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0)\n{return new Date(y, m, d, h, i);}\nelse if (y > 0 && m >= 0 && d > 0 && h >= 0)\n{return new Date(y, m, d, h);}\nelse if (y > 0 && m >= 0 && d > 0)\n{return new Date(y, m, d);}\nelse if (y > 0 && m >= 0)\n{return new Date(y, m);}\nelse if (y > 0)\n{return new Date(y);}\n}return null;}", Date.parseRegexes[regexNum] = new RegExp("^" + regex + "$", "i"), eval(code) }, Date.formatCodeToRegex = function (e, t) { switch (e) { case "D": return { g: 0, c: null, s: "(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)" }; case "j": case "d": return { g: 1, c: "d = parseInt(results[" + t + "], 10);\n", s: "(\\d{1,2})" }; case "l": return { g: 0, c: null, s: "(?:" + Date.dayNames.join("|") + ")" }; case "S": return { g: 0, c: null, s: "(?:st|nd|rd|th)" }; case "w": return { g: 0, c: null, s: "\\d" }; case "z": return { g: 1, c: "z = parseInt(results[" + t + "], 10);\n", s: "(\\d{1,3})" }; case "W": return { g: 0, c: null, s: "(?:\\d{2})" }; case "F": return { g: 1, c: "m = parseInt(Date.monthNumbers[results[" + t + "].substring(0, 3)], 10);\n", s: "(" + Date.monthNames.join("|") + ")" }; case "M": return { g: 1, c: "m = parseInt(Date.monthNumbers[results[" + t + "]], 10);\n", s: "(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)" }; case "n": case "m": return { g: 1, c: "m = parseInt(results[" + t + "], 10) - 1;\n", s: "(\\d{1,2})" }; case "t": return { g: 0, c: null, s: "\\d{1,2}" }; case "L": return { g: 0, c: null, s: "(?:1|0)" }; case "Y": return { g: 1, c: "y = parseInt(results[" + t + "], 10);\n", s: "(\\d{4})" }; case "y": return { g: 1, c: "var ty = parseInt(results[" + t + "], 10);\ny = ty > Date.y2kYear ? 1900 + ty : 2000 + ty;\n", s: "(\\d{1,2})" }; case "a": return { g: 1, c: "if (results[" + t + "] == 'am') {\nif (h == 12) { h = 0; }\n} else { if (h < 12) { h += 12; }}", s: "(am|pm)" }; case "A": return { g: 1, c: "if (results[" + t + "] == 'AM') {\nif (h == 12) { h = 0; }\n} else { if (h < 12) { h += 12; }}", s: "(AM|PM)" }; case "g": case "G": case "h": case "H": return { g: 1, c: "h = parseInt(results[" + t + "], 10);\n", s: "(\\d{1,2})" }; case "i": return { g: 1, c: "i = parseInt(results[" + t + "], 10);\n", s: "(\\d{2})" }; case "s": return { g: 1, c: "s = parseInt(results[" + t + "], 10);\n", s: "(\\d{2})" }; case "O": return { g: 0, c: null, s: "[+-]\\d{4}" }; case "T": return { g: 0, c: null, s: "[A-Z]{3}" }; case "Z": return { g: 0, c: null, s: "[+-]\\d{1,5}" }; default: return { g: 0, c: null, s: String.escape(e) } } }, Date.prototype.getTimezone = function () { return this.toString().replace(/^.*? ([A-Z]{3}) [0-9]{4}.*$/, "$1").replace(/^.*?\(([A-Z])[a-z]+ ([A-Z])[a-z]+ ([A-Z])[a-z]+\)$/, "$1$2$3") }, Date.prototype.getGMTOffset = function () { return (0 < this.getTimezoneOffset() ? "-" : "+") + String.leftPad(Math.floor(Math.abs(this.getTimezoneOffset()) / 60), 2, "0") + String.leftPad(Math.abs(this.getTimezoneOffset()) % 60, 2, "0") }, Date.prototype.getDayOfYear = function () { var e = 0; Date.daysInMonth[1] = this.isLeapYear() ? 29 : 28; for (var t = 0; t < this.getMonth(); ++t)e += Date.daysInMonth[t]; return e + this.getDate() }, Date.prototype.getWeekOfYear = function () { var e = this.getDayOfYear() + (4 - this.getDay()), t = 7 - new Date(this.getFullYear(), 0, 1).getDay() + 4; return String.leftPad(Math.ceil((e - t) / 7) + 1, 2, "0") }, Date.prototype.isLeapYear = function () { var e = this.getFullYear(); return 0 == (3 & e) && (e % 100 || e % 400 == 0 && e) }, Date.prototype.getFirstDayOfMonth = function () { var e = (this.getDay() - (this.getDate() - 1)) % 7; return e < 0 ? 7 + e : e }, Date.prototype.getLastDayOfMonth = function () { var e = (this.getDay() + (Date.daysInMonth[this.getMonth()] - this.getDate())) % 7; return e < 0 ? 7 + e : e }, Date.prototype.getDaysInMonth = function () { return Date.daysInMonth[1] = this.isLeapYear() ? 29 : 28, Date.daysInMonth[this.getMonth()] }, Date.prototype.getSuffix = function () { switch (this.getDate()) { case 1: case 21: case 31: return "st"; case 2: case 22: return "nd"; case 3: case 23: return "rd"; default: return "th" } }, String.escape = function (e) { return e.replace(/('|\\)/g, "\\$1") }, String.leftPad = function (e, t, n) { var a = new String(e); for (null == n && (n = " "); a.length < t;)a = n + a; return a }, Date.daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], Date.monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], Date.dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], Date.y2kYear = 50, Date.monthNumbers = { Jan: 0, Feb: 1, Mar: 2, Apr: 3, May: 4, Jun: 5, Jul: 6, Aug: 7, Sep: 8, Oct: 9, Nov: 10, Dec: 11 }, Date.patterns = { ISO8601LongPattern: "Y-m-d H:i:s", ISO8601ShortPattern: "Y-m-d", ShortDatePattern: "n/j/Y", LongDatePattern: "l, F d, Y", FullDateTimePattern: "l, F d, Y g:i:s A", MonthDayPattern: "F d", ShortTimePattern: "g:i A", LongTimePattern: "g:i:s A", SortableDateTimePattern: "Y-m-d\\TH:i:s", UniversalSortableDateTimePattern: "Y-m-d H:i:sO", YearMonthPattern: "F, Y" } }();